EJEMPLOS ORACLE

--COMENTARIOS
((--) COMENTAR UNA SOLA LINEA)
((/*  */) COMENTAR MAS DE UNA LINEA)

SELECT NOMBRE AS "Nombre" FROM EMPLEADOS

SELECT FIRST_NAME, SALARY, SALARY*12 AS "Salario anual" FROM EMPLOYEES

SELECT 'NOMBRE:' || FIRST_NAME || ' ' || LAST_NAME AS "NOMBRE EMPLEADO" FROM EMPLOYEES

--DUAL (SIEMPRE DEVUELVE UNA SOLA FILA)
SELECT 4+3, 'ES EL RESULTADO' FROM DUAL

--DESK (MOSTRAR ESTRUCTURA DELA TABLA)
DESK DUAL;

--NULL (SIEMPRE MUESTRA)
SELECT FIRST_NAME, SALARY,COMMISSION_PCT, SALARY*COMMISSION_PCT FROM EMPLOYEES

--DISTINCT
SELECT FIRST_NAME, DEPARTMEN_ID FROM EMPLOYEES

SELECT DISTINCT DEPARTMEN_ID FROM EMPLOYEES

SELECT DISTINCT DEPARTMEN_ID, JOB_ID FROM EMPLOYEES

--WHERE

SELECT FIRST_NAME,DEPARTMENT_ID FROM EMPLOYEES WHERE DEPARTMENT_ID=50;
SELECT FIRST_NAME,SALARY FROM EMPLOYEES WHERE SALARY>5000;
(=,>,<,>=,<=,<>)
SELECT FIRST_NAME,SALARY FROM EMPLOYEES WHERE FIRST_NAME='John'; (diferencia mayus)
SELECT FIRST_NAME,SALARY FROM EMPLOYEES WHERE FIRST_NAME<>'John';
SELECT FIRST_NAME,SALARY FROM EMPLOYEES WHERE SALARY BETWEEN 3000 AND 6000;
SELECT * FROM EMPLOYEES WHERE FIRST_NAME BETWEEN 'Douglas' AND 'Steven';
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID IN (10,60); (CON QUE SE CUMPLA UNA ES SUFICIENTE)
SELECT * FROM EMPLOYEES WHERE JOB_ID IN ('SH_CLERK','ST_CLERK');
SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT IS NULL;
SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT IS NOT NULL;
SELECT * FROM EMPLOYEES WHERE SALARY > 5000 AND DEPARTMENT_ID=50;
SELECT * FROM EMPLOYEES WHERE SALARY > 5000 OR DEPARTMENT_ID=50;
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID NOT IN (50,60,100);
SELECT * FROM EMPLOYEES WHERE SALARY>5000 AND DEPARTMENT_ID IN (50,60) AND COMMISSION_PCT IS NULL;
SELECT * FROM EMPLOYEES WHERE SALARY>5000 AND (DEPARTMENT_ID IN (50,60) OR COMMISSION_PCT IS NULL);
SELECT * FROM EMPLOYEES ORDER BY SALARY ASC;
SELECT * FROM EMPLOYEES ORDER BY SALARY DESC;
SELECT * FROM EMPLOYEES ORDER BY FIRST_NAME , LAST_NAME;
SELECT FIRST_NAME,LAST_NAME, SALARY*12 AS SALARIOTOTAL FROM EMPLOYEES ORDER BY SALARIOTOTAL;
SELECT FIRST_NAME,LAST_NAME, SALARY*12 AS SALARIOTOTAL FROM EMPLOYEES ORDER BY 3;
SELECT FIRST_NAME,LAST_NAME, SALARY*12 AS SALARIOTOTAL FROM EMPLOYEES FETCH FIRST 5 ROWS ONLY;
SELECT FIRST_NAME,LAST_NAME, SALARY*12 AS SALARIOTOTAL FROM EMPLOYEES ORDER BY SALARY DESC FETCH FIRST/NEXT 5 ROWS ONLY;
SELECT FIRST_NAME,LAST_NAME, SALARY*12 AS SALARIOTOTAL FROM EMPLOYEES ORDER BY SALARY DESC FETCH FIRST 7 ROWS WITH TIES; (AGRUPANDO SI HAY MAS DE UNA IGUAL)
SELECT FIRST_NAME,LAST_NAME, SALARY*12 AS SALARIOTOTAL FROM EMPLOYEES ORDER BY SALARY DESC OFFSET 5 ROWS FETCH FIRST 7 ROWS WITH TIES; (NOS SALTAMOS 5 FILAS)
SELECT FIRST_NAME,LAST_NAME, SALARY*12 AS SALARIOTOTAL FROM EMPLOYEES FETCH FIRST 20 PERCENT ROWS ONLY;
SELECT EMAIL, LOWER(EMAIL) FROM EMPLOYEES;
SELECT EMAIL, UPPER(EMAIL) FROM EMPLOYEES;
SELECT INITCAP('ESTO ES UNA PRUEBA') FROM DUAL; (PRIMERA MAYUS DE CADA LETRA)
SELECT * FROM EMPLOYEES WHERE UPPER(FIRST_NAME)='DAVID';
SELECT CONCAT(FIRST_NAME,CONCAT(' ',LAST_NAME)) FROM EMPLOYEES;
SELECT FIRST_NAME, LENGTH(FIRST_NAME) FROM EMPLOYEES WHERE LENGTH(FIRST_NAME)=6;
SELECT FIRST_NAME, SUBSTR(FIRST_NAME,1,3) FROM EMPLOYEES; (DESDE EL 1 HASTA EL 3)
SELECT FIRST_NAME, SUBSTR(FIRST_NAME,3) FROM EMPLOYEES; (DESDE EL 3 HASTA EL FINAL)
SELECT FIRST_NAME, SUBSTR(FIRST_NAME, LENGTH(FIRST_NAME),1) FROM EMPLOYEES; (DESDE EL LARGO DEL NOMBRE SOLO UNA LETRA)
SELECT FIRST_NAME, SUBSTR(FIRST_NAME, LENGTH(FIRST_NAME),1) FROM EMPLOYEES; (DAME EN QUE POSICION TIENEN UNA A LOS NOMBRES)
SELECT FIRST_NAME, INSTR(FIRST_NAME,'a') FROM EMPLOYEES WHERE INSTR(FIRST_NAME,'a')<>0; (AHORA SOLO SI ES DISTINTA DE 0 (QUE TENGA AL MENOS UNA))
SELECT FIRST_NAME, INSTR( LOWER(FIRST_NAME),'a') FROM EMPLOYEES WHERE INSTR(LOWER(FIRST_NAME),'a')<>0; (PASANDOLO A MINUSCULAS POR SI EMPEZABA PÒR A MAYUS)
SELECT FIRST_NAME, INSTR( LOWER(FIRST_NAME),'a',4) FROM EMPLOYEES WHERE INSTR(LOWER(FIRST_NAME),'a',4)<>0; (SOLO LO HACEA PARTIR DE LA POSICION 4)

SELECT RPAD(FIRST_NAME,30,'*') FROM EMPLOYEES; (COMPLETARA HASTA LA POSCION 20 DE CADA NOMBRE CON EL VALOR QUE LE PONGAMOS)
SELECT LPAD(FIRST_NAME,30,'*') FROM EMPLOYEES; (COMPLETARA HASTA LA POSCION 20(IZQ) DE CADA NOMBRE CON EL VALOR QUE LE PONGAMOS)
SELECT REPLACE(FIRST_NAME,'a','*') FROM EMPLOYEES; (cCAMBIA LO QUE LE INDEQEUS POR OTRO VALOR INDICADO)

SELECT RTRIM('HOLA           ') || 'ADIOS' FROM DUAL;
SELECT ('HOLA') || LTRIM('      ADIOS') FROM DUAL;
SELECT FIRST_NAME,RTRIM(FIRST_NAME,'n') FROM EMPLOYEES;

SELECT ROUND(50.98877,2) FROM DUAL;
SELECT TRUNC(50.98877,2) FROM DUAL;
SELECT MOD(10,2) FROM DUAL; (RESTO)
SELECT POWER(10,2) FROM DUAL; (ELEVA EL PRIMER NUMERO AL SEGUNDO)


SELECT SYSDATE FROM DUAL;
SELECT SYSDATE+2 FROM DUAL;
SELECT SYSDATE-2 FROM DUAL;
SELECT HIRE_DATE, SYSDATE - HIRE_DATE AS DIASTRABAJADOS FROM EMPLOYEES;

SELECT HIRE_DATE, MONTHS_BETWEEN(SYSDATE,HIRE_DATE) AS MESESTRABAJADOS FROM EMPLOYEES;
SELECT SYSDATE, ADD_MONTHS(SYSDATE,3) AS MESESTRABAJADOS FROM DUAL;
SELECT SYSDATE, NEXT_DAY(SYSDATE,'WED') AS MESESTRABAJADOS FROM DUAL;
SELECT SYSDATE, LAST_DAY(SYSDATE) AS ULTIMODIAMES FROM DUAL;
SELECT SYSDATE, ROUND(SYSDATE,'MONTH') AS REDONDEOMES, ROUND(SYSDATE,'YEAR') AS REDONDEOANNO FROM DUAL;
SELECT SYSDATE, TRUNC(SYSDATE,'MONTH') AS CORTAOMES, TRUNC(SYSDATE,'YEAR') AS CORTAANNO FROM DUAL;

SELECT '10'+10 FROM DUAL;
SELECT 10||10 FROM DUAL;

SELECT SYSDATE,TO_CHAR(SYSDATE,'YYYY') FROM DUAL;
SELECT SYSDATE,TO_CHAR(SYSDATE,'mon') FROM DUAL;
SELECT SYSDATE,TO_CHAR(SYSDATE,'day') FROM DUAL;
SELECT SYSDATE,TO_CHAR(SYSDATE,'HH24') FROM DUAL;
SELECT SYSDATE,TO_CHAR(SYSDATE,'MI') FROM DUAL;
SELECT SYSDATE,TO_CHAR(SYSDATE,'SS') FROM DUAL;
SELECT SYSDATE,TO_CHAR(SYSDATE,'"son las " HH24:MI:SS "del dia "DAY:MM:YYYY') FROM DUAL;
SELECT SALARY, TO_CHAR(SALARY,'9999'), TO_CHAR(SALARY,'00009'), TO_CHAR(SALARY,'$0000009.99') FROM EMPLOYEES; (9-NUMERO, 0-PONE UN CERO,L - MONEDA ACTUAL)


SELECT TO_DATE('10-01-09') FROM DUAL; -- NO ENTIENDE
SELECT TO_DATE('10-01-2009') FROM DUAL; -- NO ENTIENDE
SELECT TO_DATE('10-JAN-09') FROM DUAL;
SELECT TO_DATE('10-01-09','dd-mm-yy') FROM DUAL;
SELECT TO_DATE('10-jan-09','dd-mon-yy') FROM DUAL;

SELECT TO_CHAR(TO_DATE('10-JAN-99','DD-MM-RR'),'DD-MM-YYYY') FROM DUAL; -- LO QUE APLICA POR DEFECTO
SELECT TO_CHAR(TO_DATE('10-JAN-99','DD-MM-YY'),'DD-MM-YYYY') FROM DUAL; 

SELECT TO_NUMBER('1000.99','9999.99') FROM DUAL; 
SELECT TO_NUMBER('€1000','L9999') FROM DUAL; -- NO FUINCIONA 

---------------NULOS------------------
--NVL DECUELVE EXPRESION
SELECT NVL(NULL,'ADIOS') FROM DUAL; 
SELECT FIRST_NAME, NVL(COMMISSION_PCT, 0) FROM EMPLOYEES;
SELECT FIRST_NAME, NVL(COMMISSION_PCT, 0)*SALARY FROM EMPLOYEES;
--NVL2 DECUELVE VALOR
SELECT NVL(NULL,'ADIOS') FROM DUAL;
SELECT FIRST_NAME, NVL2(COMMISSION_PCT,SALARY*COMMISSION_PCT, SALARY*0.1) FROM EMPLOYEES;
--NULLIF
SELECT COUNTRY_ID,COUNTRY_NAME,UPPER(SUBSTR(COUNTRY_NAME,1,2)),NULLIF(COUNTRY_ID,UPPER(SUBSTR(COUNTRY_NAME,1,2))),NVL2(NULLIF(COUNTRY_ID,UPPER(SUBSTR(COUNTRY_NAME,1,2))),'NO SON IGUALES','SON IGUALES') FROM COUNTRIES;
--COALESCE
SELECT FIRST_NAME, COALESCE(TO_CHAR(COMMISSION_PCT),TO_CHAR(MANAGER_ID),'NO TIENE') FROM EMPLOYEES;
--CASE
SELECT FIRST_NAME,JOB_ID, CASE JOB_ID WHEN 'SH_CLERK' THEN 'TIPO1' WHEN 'ST_CLERK' THEN 'TIPO2' WHEN 'ST_MAN' THEN 'TIPO3' ELSE 'SIN TIPO' END FROM EMPLOYEES WHERE DEPARTMENT_ID=50;
--CASE
SELECT FIRST_NAME,SALARY, CASE WHEN SALARY BETWEEN 0 AND 3000 THEN 'POCO' WHEN SALARY BETWEEN 3001 AND 5000 THEN 'MEDIA' WHEN SALARY > 5001 THEN 'MUCHO' ELSE 'NADA' END FROM EMPLOYEES WHERE DEPARTMENT_ID=50;
--DECODE
SELECT FIRST_NAME,DEPARTMENT_ID, DECODE(DEPARTMENT_ID,50,'INFORMATICA',10,'VENTAS','OTRO') FROM EMPLOYEES WHERE DEPARTMENT_ID=50;
--OPERACION
SELECT NVL(NULL,'ADIOS') FROM DUAL;
SELECT DEPARTMENT_ID,COUNT(DEPARTMENT_ID) FROM EMPLOYEES GROUP BY DEPARTMENT_ID;
SELECT DEPARTMENT_ID,AVG(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID;
SELECT DEPARTMENT_ID,MAX(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID;
SELECT DEPARTMENT_ID,MIN(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID;
--COUNT --DISTINCT
SELECT COUNT(SALARY),COUNT(COMMISSION_PCT) FROM EMPLOYEES;
SELECT COUNT(*) FROM EMPLOYEES WHERE SALARY > 6000;
SELECT COUNT(DISTINCT FIRST_NAME) FROM EMPLOYEES WHERE SALARY > 6000;
SELECT DISTINCT DEPARTMENT_ID FROM EMPLOYEES;
--GROUP BY
SELECT COUNT(*), DEPARTMENT_ID, MAX(SALARY) - MIN(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID ORDER BY DEPARTMENT_ID;
--HAVING
SELECT COUNT(*), DEPARTMENT_ID, MAX(SALARY) - MIN(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID HAVING SUM(SALARY)>25000 AND COUNT(*) > 10 ORDER BY DEPARTMENT_ID;
--JOIN
SELECT REGION_ID, REGION_NAME, COUNTRY_NAME FROM REGIONS RE NATURAL JOIN COUNTRIES CO;
SELECT D.DEPARTMENT_NAME, E.FIRST_NAME FROM EMPLOYEES E JOIN DEPARTMENTS D USING (DEPARTMENT_ID);
--JOIN ON
SELECT D.DEPARTMENT_NAME, E.FIRST_NAME,CITY FROM EMPLOYEES E JOIN DEPARTMENTS D ON (E.DEPARTMENT_ID=D.DEPARTMENT_ID) JOIN LOCATIONS L ON (D.LOCATION_ID=L.LOCATION_ID) AND SALARY>5000;
--SELF JOIN (tabla mas de una vez)
SELECT TRABAJADOR.FIRST_NAME AS NOMBRETRABAJADOR , JEFE.FIRST_NAME  AS NOMBREJEFE FROM EMPLOYEES TRABAJADOR JOIN EMPLOYEES JEFE ON (TRABAJADOR.MANAGER_ID = JEFE.EMPLOYEE_ID);
--RIGTH OUTER
SELECT DEPARTMENT_NAME, FIRST_NAME FROM DEPARTMENTS D RIGHT OUTER JOIN EMPLOYEES E ON D.DEPARTMENT_ID = E.DEPARTMENT_ID; --AUNQUE NO TENGAMOS MAS EN LA DERECHA LO PONE IGUALMENTE. NO TINE EL JOIN PERO SI ESTA EN LA TABLA

SELECT DEPARTMENT_NAME, FIRST_NAME FROM DEPARTMENTS D LEFT OUTER JOIN EMPLOYEES E ON D.DEPARTMENT_ID = E.DEPARTMENT_ID; --AUNQUE NO TENGAMOS MAS EN LA DERECHA LO PONE IGUALMENTE. NO TINE EL JOIN PERO SI ESTA EN LA TABLA

SELECT DEPARTMENT_NAME, FIRST_NAME FROM DEPARTMENTS D FULL OUTER JOIN EMPLOYEES E ON D.DEPARTMENT_ID = E.DEPARTMENT_ID; --AUNQUE NO TENGAMOS MAS EN LA DERECHA LO PONE IGUALMENTE. NO TINE EL JOIN PERO SI ESTA EN LA TABLA

SELECT FIRST_NAME FROM EMPLOYEES WHERE SALARY >ANY (SELECT SALARY FROM EMPLOYEES WHERE JOB_ID='IT_PROG') AND JOB_ID <>'IT_PROG' -- CUALQUIERA

SELECT FIRST_NAME FROM EMPLOYEES WHERE SALARY > ALL (SELECT SALARY FROM EMPLOYEES WHERE JOB_ID='IT_PROG') AND JOB_ID <>'IT_PROG' -- AHORA QUE SEA MAYOR A TODOS 

SELECT FIRST_NAME FROM EMPLOYEES EMP WHERE SALARY=(SELECT MAX(SALARY) FROM EMPLOYEES WHERE DEPARTMENT_ID=EMP.DEPARTMENT_ID); --POR CADA FILA DE LA  QUERY PRINCIPAL SE LE PASA UN VALOR O VARIOS A LA SUBCONSULTA


SELECT DEPARTMENT_NAME FROM DEPARTMENTS DEPT WHERE NOT EXISTS (SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID = DEPT.DEPARTMENT_ID);


-- UNION --> UNIR A Y B ELIMINANDO DUPLICADOS

-- UNION ALL --> UNIR A Y B 

--INTERSECT --> DATOS COMUNES EN A Y B

-- MINUS --> TODOS LOS QUE ESTAN EN A MENOS LOS QUE ESTAN EN B TAMBIEN



-- CREAR REGIONS1

CREATE TABLE REGIONS1
(
    REGION_ID NUMBER,
    REGION_NAME VARCHAR2(25)
);

INSERT INTO REGIONS1 VALUES (1,'Europe');
INSERT INTO REGIONS1 VALUES (3,'Asia');
INSERT INTO REGIONS1 VALUES (6,'Australia');
INSERT INTO REGIONS1 VALUES (8,'Antartica');

COMMIT;

-- INSERTAR 

INSERT INTO REGIONS1 VALUES (1,'Europe');
INSERT INTO REGIONS1 (REGION_ID,REGION_NAME) VALUES (1,'Europe');
INSERT INTO REGIONS1 (REGION_ID) VALUES (1); -- SI EL CAMPO ESTA EN NULLEABLE
INSERT INTO REGIONS1 VALUES (1,NULL);
INSERT INTO DPT2 VALUES (1,UPPER('INFORMATICA'),100);
INSERT INTO DPT2 SELECT DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID FROM DEPARTMENTS WHERE LOCATION_ID = 1700 ;



DELETE DPT2 WHERE CODIGO = 1 ;
DELETE REGIONS WHERE REGION_ID IN (15,6,7) ;
DELETE REGIONS1 WHERE REGION_ID IN (SELECT REGION_ID FROM REGIONS WHERE REGION_ID IN (1,3)) ;

DELETE REGIONS1;
TRUNCATE TABLE REGIONS1;


COMMIT -- REALIZAR Y ACABAR TRANSACC

ROLLBACK -- RECHAZAR Y ACABAR TRANSACC

COMANDO TIPO DDL (CREATE, ALTER O DROP LLEVAN UN COMMIT) ACABA TRANSACC 

COMANDO TIPO DCL () ACABA TRANSACC 

CUANDO HAY UN FALLO HACE UN ROLLBACK

PUEDES CONFIGURAR COMMIT AUTOMATICOS (CUANOD GENERES UN INSERT POR EJEMPLO)


INSERT INTO REGIONS1 VALUES (1,'Europe1');
INSERT INTO REGIONS1 VALUES (2,'Europe2');

SAVEPOINT A;

INSERT INTO REGIONS1 VALUES (3,'Europe3');
INSERT INTO REGIONS1 VALUES (4,'Europe4');

ROLLBACK TO SAVEPOINT A;



-- CREATE
CREATE TABLE PRUEBA1 (
    CODIGO NUMBER DEFAULT 0,
    NOMBRE VARCHAR2(100) DEFAULT 'TOMAS',
    FECHA_ENTRADA DATE DEFAULT SYSDATE
);

INSERT INTO PRUEBA1 (CODIGO) VALUES (10);

CREATE TABLE PRUEBA2 (
    CODIGO NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL,
    FECHA_ENTRADA DATE DEFAULT SYSDATE
);

CREATE TABLE PRUEBA3 (
    CODIGO1 NUMBER,
    CODIGO2 NUMBER,
    NOMBRE VARCHAR2(100) NOT NULL,
    FECHA_ENTRADA DATE DEFAULT SYSDATE,
    PRIMARY KEY (CODIGO1, CODIGO2)
);

CREATE TABLE PRUEBA4 (
    CODIGO NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(100) UNIQUE --ES UNA PRIMARY KEY PERO PUEDE SER NULA
);

CREATE TABLE PRUEBA4 (
    CODIGO NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(100) UNIQUE, --ES UNA PRIMARY KEY PERO PUEDE SER NULA
    CONSTRAINT NOMBRE_I UNIQUE(NOMBRE) -- LE DOY UN NOMBRE A "NOMBRE", A ESA RESTRICCION
);




CREATE TABLE CURSOS (
    CODIGO NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL
);

CREATE TABLE ALUMNOS (
    COD_ALUMNO NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL,
    APELLIDOS VARCHAR2(100),
    COD_CURSO NUMBER REFERENCES CURSOS(CODIGO)
);

INSERT INTO CURSOS VALUES (1,'WEB');
INSERT INTO ALUMNOS VALUES (100,'RAUL','PEREZ',1);

CREATE TABLE ALUMNOS1 (
    COD_ALUMNO NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL,
    APELLIDOS VARCHAR2(100),
    COD_CURSO NUMBER,
    CONSTRAINT CURSO_ALUMNO FOREIGN KEY (COD_CURSO) REFERENCES CURSOS(CODIGO)
);
 


CREATE TABLE EMPLEADO (
    CODIGO NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL CHECK (NOMBRE =UPPER(NOMBRE)),
    SALARIO NUMBER CHECK (SALARIO > 1000)
    );

    INSERT INTO EMPLEADO VALUES(1,'Alberto',900); --NO
    INSERT INTO EMPLEADO VALUES(1,'ALBERTO',2000); --SI

CREATE TABLE EMPLEADOS
AS SELECT * FROM EMPLOYEES;


CREATE TABLE EMPLEADOS_50
AS SELECT * FROM EMPLOYEES WHERE EMPLOYEE_ID=50;


CREATE TABLE EMPLEADOS2
AS SELECT FIRST_NAME||' '||LAST_NAME AS NOMBRE_COMLPETO,SALARY AS SALARIO,SALARY*12 AS SALARIO_ANUAL FROM EMPLOYEES;




ALTER TABLE CURSOS
ADD (PROFESOR VARCHAR2(100));

ALTER TABLE CURSOS
ADD (TUTOR VARCHAR2(100) NOT NULL); -- NO PUEDE AÑADIR NOT NULL PORQUE LOS YA CREADOS NO TENDRIA VALOR 


ALTER TABLE CURSOS
MODIFY (PROFESOR VARCHAR2(50));


ALTER TABLE CURSOS
MODIFY (PROFESOR NUMBER); --SOLO SI AUN NO TENIA DATOS

ALTER TABLE CURSOS
MODIFY (PROFESOR VARCHAR2(50) DEFAULT 'PROFESOR1');

ALTER TABLE CURSOS
DROP (TUTOR);


ALTER TABLE CURSOS
READ ONLY; --CONTRA ESCRITURAS (PARA QUE NADIE LO TOQUE)

ALTER TABLE CURSOS
READ WRITE;


DROP TABLE CURSOS CASCADE CONSTRAINT; -- BORRAR BORRANDO TODO LO QUE TENGA DE HIJO(NO LA TABLA, LOS CAMPOS)



CREATE VIEW EMPLE_VISTA_50
AS SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID=50; -- CREA UNA VISTA QUE EJECUTA LA SELECT QUE LE PONGAS

SELECT * FROM EMPLE_VISTA_50 WHERE SALARY > 5000;

SELECT JOB_ID, AVG(SALARY) FROM EMPLE_VISTA_50 GROUP BY JOB_ID;

DROP VIEW EMPLE_SALARIO;

CREATE VIEW EMPLE_SALARIO
AS SELECT FIRST_NAME||' '||LAST_NAME AS NOMBRE_COMLPETO,SALARY AS SALARIO,SALARY*12 AS SALARIO_ANUAL FROM EMPLOYEES;

CREATE INDEX REGIONS_VISTA
AS SELECT * FROM REGIONS;

INSERT INTO REGIONS_VISTA VALUES (5,'XXX')


CREATE INDEX INDEX1 ON EMPLOYEES (LAST_NAME); --CREAR INDEX PARA BUSQUEDAS


CREATE INDEX INDEX1 ON EMPLOYEES (LAST_NAME); --CREAR INDEX PARA BUSQUEDAS
CREATE INDEX INDEX2 ON EMPLOYEES (FIRST_NAME, LAST_NAME); --CREAR INDEX COMPUESTO PARA BUSQUEDAS
DROP INDEX INDEX2;





CREATE SEQUENCE SECUENCIA1 INCREMENT BY 1 START WITH 1 MAXVALUE 1000 MINVALUE 1 CACHE 20;  


SELECT SECUENCIA1.NEXTVAL FROM DUAL;

SELECT SECUENCIA1.CURRVAL FROM DUAL;

SELECT * FROM REGIONS1;
INSERT INTO REGIONS1 VALUES (SECUENCIA1.NEXTVAL,'AAAB');
DROP SEQUENCE SECUENCIA1;



CREATE SYNONYM DEPARTAMENTOS FOR DEPARTMENTS;

SELECT * FROM DEPARTAMENTOS;

GRANT SELECT ON DEPARTMENTS TO PRUEBA;

-- SI ESTOY EN OTRO USUARIO:
CREATE SYNONYM DEPARTAMENTOS FOR HR.DEPARTMENTS;




    --LIKE
    SELECT * FROM EMPLOYEES WHERE FIRST_NAME LIKE 'J%'; (EMPIEZA POR J)
    SELECT * FROM EMPLOYEES WHERE FIRST_NAME LIKE '_e%'; (EMPIEZA POR lo que sea, segundo una e y acaba como sea)
    SELECT * FROM EMPLOYEES WHERE FIRST_NAME LIKE '%te%'; (contenga te en cualquier sitio)

--DATE
SELECT FIRST_NAME,SALARY FROM EMPLOYEES WHERE HIRE_DATE='21-06-2007'; (NO FINCIONA)
SELECT * FROM EMPLOYEES WHERE HIRE_DATE BETWEEN '01-01-07' AND '01-01-09';
 --SUBCONSULTAS

SELECT FIRST_NAME ,SALARY FROM EMPLOYES WHERE SALARY = (SELECT MAX(SALARY) FROM EMPLOYES)
SELECT FIRST_NAME ,SALARY FROM EMPLOYEES WHERE DEPARTMENT_ID = ( SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Douglas' AND LAST_NAME= 'Grant');
--WHERE--HAVING--FROM

SELECT FIRST_NAME ,SALARY FROM EMPLOYEES WHERE SALARY IN ( SELECT MAX (SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID);


        --FUNCIONES
